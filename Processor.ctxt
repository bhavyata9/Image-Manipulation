#BlueJ class context
comment0.params=bi
comment0.target=void\ flipHorizontal(java.awt.image.BufferedImage)
comment0.text=\r\n\ Flips\ the\ image\ horizontally\r\n\ @param\ bi\ -\ the\ BufferedImage\ to\ be\ flipped\ horizontally\ \ \ \r\n
comment1.params=bi
comment1.target=void\ flipVertical(java.awt.image.BufferedImage)
comment1.text=\r\n\ Flips\ the\ image\ vertically\r\n\ @param\ bi\ -\ the\ BufferedImage\ to\ be\ flipped\ vertically\ \ \ \r\n
comment10.params=bi
comment10.target=void\ sepia(java.awt.image.BufferedImage)
comment10.text=\r\n\ Some\ code\ borrowed\ from\:\ http\://stackoverflow.com/questions/5132015/how-to-convert-image-to-sepia-in-java\r\n\ Gives\ the\ image\ a\ brownish\ tone\ \r\n\ @param\ bi\ -\ the\ BufferedImage\ to\ change\ \ \r\n\ \r\n
comment11.params=bi
comment11.target=void\ blur(java.awt.image.BufferedImage)
comment11.text=\r\n\ Borrowed\ from\:\ http\://www.jhlabs.com/ip/blurring.html\r\n\ Blurs\ the\ image\r\n\ @param\ bi\ -\ the\ BufferedImage\ to\ be\ blurred\ \ \ \ \ \r\n
comment12.params=bi
comment12.target=void\ sharpen(java.awt.image.BufferedImage)
comment12.text=\r\n\ Borrowed\ from\:\ http\://www.java2s.com/Code/Java/2D-Graphics-GUI/ImageEffectSharpenblur.htm\r\n\ Sharpens\ the\ image\r\n\ @param\ bi\ -\ the\ BufferedImage\ to\ be\ sharpened\ \ \ \ \ \r\n
comment13.params=bi
comment13.target=void\ negative(java.awt.image.BufferedImage)
comment13.text=\r\n\ Makes\ the\ light\ parts\ of\ the\ image\ darker\ and\ the\ dark\ parts\ lighter\r\n\ @param\ bi\ -\ the\ BufferedImage\ to\ be\ inversed\r\n
comment14.params=bi
comment14.target=void\ brighten(java.awt.image.BufferedImage)
comment14.text=\r\n\ Brightens\ the\ image\ \r\n\ @param\ bi\ -\ the\ BufferedImage\ to\ be\ changed\ \ \ \ \r\n
comment15.params=bi
comment15.target=void\ darken(java.awt.image.BufferedImage)
comment15.text=\r\n\ Darkens\ the\ image\r\n\ @param\ bi\ -\ the\ BufferedImage\ to\ be\ darkened\ \ \ \r\n
comment16.params=bi
comment16.target=java.awt.image.BufferedImage\ undo(java.awt.image.BufferedImage)
comment16.text=\r\n\ Returns\ the\ last\ edited\ image\r\n\ @param\ bi\ -\ current\ BufferedImage\r\n\ @return\ BufferedImage\ -\ the\ last\ edited\ BufferedImage\r\n
comment17.params=bi
comment17.target=java.awt.image.BufferedImage\ redo(java.awt.image.BufferedImage)
comment17.text=\r\n\ Displays\ the\ image\ that\ was\ edited\ before\ this\ image,\ but\ was\ undoed\r\n\ @param\ bi\ -\ current\ BufferedImage\r\n\ @return\ BufferedImage\ -\ the\ BufferedImage\ with\ the\ next\ latest\ edit\r\n
comment18.params=bi
comment18.target=java.awt.image.BufferedImage\ deepCopy(java.awt.image.BufferedImage)
comment18.text=\r\n\ Creates\ a\ copy\ of\ the\ current\ image\ so\ that\ it\ would\ not\ be\ passed\ by\ reference\r\n\ @param\ bi\ -\ current\ BufferedImage\r\n\ @return\ BufferedImage\ -\ the\ copied\ image\r\n
comment19.params=rgbaValue
comment19.target=int[]\ unpackPixel(int)
comment19.text=\r\n\ Takes\ in\ an\ rgb\ value\ -\ the\ kind\ that\ is\ returned\ from\ BufferedImage's\r\n\ getRGB()\ method\ -\ and\ returns\ 4\ integers\ for\ easy\ manipulation.\r\n\ \r\n\ By\ Jordan\ Cohen\r\n\ Version\ 0.2\r\n\ \r\n\ @param\ rgbaValue\ The\ value\ of\ a\ single\ pixel\ as\ an\ integer,\ representing<br>\r\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ 8\ bits\ for\ red,\ green\ and\ blue\ and\ 8\ bits\ for\ alpha\:<br>\r\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ <pre>alpha\ \ \ red\ \ \ \ \ green\ \ \ blue</pre>\r\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ <pre>00000000000000000000000000000000</pre>\r\n\ @return\ int[4]\ \ \ Array\ containing\ 4\ shorter\ ints<br>\r\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ <pre>0\ \ \ \ \ \ \ 1\ \ \ \ \ \ \ 2\ \ \ \ \ \ \ 3</pre>\r\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ <pre>alpha\ \ \ red\ \ \ \ \ green\ \ \ blue</pre>\r\n
comment2.params=bi
comment2.target=java.awt.image.BufferedImage\ rotateCW(java.awt.image.BufferedImage)
comment2.text=\r\n\ Rotates\ the\ image\ clockwise\ by\ 90\ degrees\r\n\ @param\ bi\ -\ the\ BufferedImage\ to\ be\ rotated\ clockwise\r\n\ @return\ BufferedImage\ -\ the\ new\ image\ rotated\r\n
comment20.params=r\ g\ b\ a
comment20.target=int\ packagePixel(int,\ int,\ int,\ int)
comment20.text=\r\n\ Takes\ in\ a\ red,\ green,\ blue\ and\ alpha\ integer\ and\ uses\ bit-shifting\r\n\ to\ package\ all\ of\ the\ data\ into\ a\ single\ integer.\r\n\ \r\n\ @param\ \ \ int\ red\ value\ (0-255)\r\n\ @param\ \ \ int\ green\ value\ (0-255)\r\n\ @param\ \ \ int\ blue\ value\ (0-255)\r\n\ @param\ \ \ int\ alpha\ value\ (0-255)\r\n\ \r\n\ @return\ int\ \ Integer\ representing\ 32\ bit\ integer\ pixel\ ready\r\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ for\ BufferedImage\r\n
comment3.params=bi
comment3.target=java.awt.image.BufferedImage\ rotateCCW(java.awt.image.BufferedImage)
comment3.text=\r\n\ Rotates\ the\ image\ counterclockwise\ by\ 90\ degrees\r\n\ @param\ bi\ -\ the\ BufferedImage\ to\ be\ rotated\ counterclockwise\r\n\ @return\ BufferedImage\ -\ the\ new\ image\ rotated\r\n
comment4.params=bi
comment4.target=java.awt.image.BufferedImage\ mirrorHorizontally(java.awt.image.BufferedImage)
comment4.text=\r\n\ Mirrors\ the\ image\ horizontally\ \r\n\ @param\ bi\ -\ the\ BufferedImage\ to\ be\ mirrored\r\n\ @return\ BufferedImage\ -\ the\ new\ image\ with\ the\ effect\r\n
comment5.params=bi
comment5.target=java.awt.image.BufferedImage\ mirrorVertically(java.awt.image.BufferedImage)
comment5.text=\r\n\ Mirrors\ the\ image\ vertically\r\n\ @param\ bi\ -\ the\ BufferedImage\ to\ be\ mirrored\r\n\ @return\ BufferedImage\ -\ the\ new\ image\ with\ the\ effect\r\n
comment6.params=bi\ originalCopy
comment6.target=java.awt.image.BufferedImage\ reset(java.awt.image.BufferedImage,\ java.awt.image.BufferedImage)
comment6.text=\r\n\ Returns\ the\ original\ image\ without\ any\ effects\ added\r\n\ @param\ bi\ -\ the\ current\ image\r\n\ @param\ originalCopy\ -\ the\ original\ image\r\n\ @return\ BufferedImage\ -\ the\ original\ image\r\n
comment7.params=bi
comment7.target=void\ warm(java.awt.image.BufferedImage)
comment7.text=\r\n\ Warms\ the\ image\ \r\n\ @param\ bi\ -\ the\ BufferedImage\ to\ be\ warmed\ \ \ \ \ \r\n
comment8.params=bi
comment8.target=void\ cool(java.awt.image.BufferedImage)
comment8.text=\r\n\ Cools\ the\ Image\r\n\ @param\ bi\ -\ the\ BufferedImage\ to\ be\ cooled\ \ \ \r\n
comment9.params=bi
comment9.target=void\ greyScale(java.awt.image.BufferedImage)
comment9.text=\r\n\ Greyscales\ the\ image\r\n\ @param\ bi\ -\ the\ BufferedImage\ to\ be\ greyscaled\ \ \r\n
numComments=21
